// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Hotel {
  id          String    @id @default(cuid())
  name        String
  location    String
  description String?
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Booking {
  id             String          @id @default(cuid())
  user           User            @relation(fields: [userId], references: [id])
  userId         String
  hotel          Hotel           @relation(fields: [hotelId], references: [id])
  hotelId        String
  checkInDate    DateTime
  checkOutDate   DateTime
  status         BookingStatus   @default(PENDING)
  checkoutAt     DateTime?       // to record when checkout happens
  familyMembers  FamilyMember[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

model FamilyMember {
  id          String   @id @default(cuid())
  booking     Booking  @relation(fields: [bookingId], references: [id])
  bookingId   String
  name        String   // Name of the family member (optional if only phone is used)
  aadharNumber String   // aadharNumber  provided for check-in
  checkedIn   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}